const express = require('express');
const cors = require('cors');
require('dotenv').config();

const authRoutes = require('./routes/authRoutes');
const userRoutes = require('./routes/userRoutes');
const { testConnection } = require('./config/database');

const app = express();
const PORT = process.env.PORT || 3000;

// Middleware
app.use(cors());
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// Logging middleware
app.use((req, res, next) => {
  console.log(`üì° ${req.method} ${req.path} - ${new Date().toISOString()}`);
  next();
});

// Routes
app.use('/api/auth', authRoutes);
app.use('/api/users', userRoutes);

// ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å
app.get('/', (req, res) => {
  res.json({
    message: 'üîê ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà User Authentication API (MariaDB)!',
    status: 'Server ‡∏£‡∏±‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥',
    database: 'MariaDB/MySQL',
    timestamp: new Date().toISOString(),
    endpoints: {
      // Authentication endpoints
      'POST /api/auth/register': '‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å',
      'POST /api/auth/login': '‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö',
      'POST /api/auth/verify': '‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö token',
      
      // User management endpoints
      'GET /api/users': '‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• user ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (admin only)',
      'GET /api/users/:id': '‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• user ‡∏ï‡∏≤‡∏° ID (admin only)',
      'PUT /api/users/:id': '‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• user (admin only)',
      'DELETE /api/users/:id': '‡∏•‡∏ö user (admin only)',
      'PUT /api/users/:id/password': '‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô',
      'GET /api/users/profile/me': '‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á (‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ token)',
      'PUT /api/users/profile/me': '‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á (‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ token)'
    },
    example_usage: {
      register: {
        method: 'POST',
        url: '/api/auth/register',
        body: {
          username: 'testuser',
          email: 'test@example.com',
          password: '123456',
          full_name: '‡∏ó‡∏î‡∏™‡∏≠‡∏ö ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ'
        }
      },
      login: {
        method: 'POST',
        url: '/api/auth/login',
        body: {
          username: 'testuser',
          password: '123456'
        }
      }
    }
  });
});

// Test database connection
app.get('/test-db', async (req, res) => {
  try {
    const isConnected = await testConnection();
    res.json({
      success: isConnected,
      message: isConnected ? '‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ MariaDB ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à' : '‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ MariaDB ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
      database: 'MariaDB/MySQL',
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    res.status(500).json({
      success: false,
      message: error.message,
      database: 'MariaDB/MySQL',
      timestamp: new Date().toISOString()
    });
  }
});

// ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô API
app.get('/example', (req, res) => {
  res.json({
    message: 'üìö ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô API (MariaDB)',
    steps: [
      {
        step: 1,
        description: '‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å',
        method: 'POST',
        url: `http://localhost:${PORT}/api/auth/register`,
        body: {
          username: 'newuser',
          email: 'newuser@test.com',
          password: '123456',
          full_name: '‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà'
        }
      },
      {
        step: 2,
        description: '‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö',
        method: 'POST',
        url: `http://localhost:${PORT}/api/auth/login`,
        body: {
          username: 'newuser',
          password: '123456'
        },
        note: '‡∏à‡∏∞‡πÑ‡∏î‡πâ token ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤'
      },
      {
        step: 3,
        description: '‡πÉ‡∏ä‡πâ token ‡πÉ‡∏ô header',
        header: 'Authorization: Bearer YOUR_TOKEN_HERE',
        note: '‡πÉ‡∏™‡πà token ‡πÉ‡∏ô header ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ authentication'
      }
    ],
    default_users: [
      { username: 'admin', password: '123456', role: 'admin' },
      { username: 'john', password: '123456', role: 'user' },
      { username: 'mary', password: '123456', role: 'user' }
    ]
  });
});

// Error handling middleware
app.use((err, req, res, next) => {
  console.error('üí• Server Error:', err.stack);
  res.status(500).json({
    success: false,
    message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå',
    error: err.message
  });
});

// 404 handler
app.use((req, res) => {
  console.log(`‚ùå 404 - ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á: ${req.method} ${req.path}`);
  res.status(404).json({
    success: false,
    message: `‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á API: ${req.method} ${req.path}`,
    availableEndpoints: [
      'GET /',
      'GET /test-db',
      'GET /example',
      'POST /api/auth/register',
      'POST /api/auth/login',
      'POST /api/auth/verify',
      'GET /api/users',
      'GET /api/users/:id',
      'PUT /api/users/:id',
      'DELETE /api/users/:id',
      'GET /api/users/profile/me',
      'PUT /api/users/profile/me'
    ]
  });
});

// ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô server
async function startServer() {
  try {
    console.log('üöÄ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô User Authentication API Server (MariaDB)...');
    console.log('=======================================================');
    
    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ MariaDB ‡∏Å‡πà‡∏≠‡∏ô
    const isConnected = await testConnection();
    
    if (!isConnected) {
      console.error('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ MariaDB ‡πÑ‡∏î‡πâ');
      console.error('   Server ‡∏à‡∏∞‡∏£‡∏±‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ ‡πÅ‡∏ï‡πà API ‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ');
      console.error('   ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ MariaDB');
    }
    
    app.listen(PORT, () => {
      console.log('=======================================================');
      console.log(`üöÄ Server ‡∏£‡∏±‡∏ô‡∏ó‡∏µ‡πà http://localhost:${PORT}`);
      console.log(`üìã API Documentation: http://localhost:${PORT}`);
      console.log(`üìö ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô: http://localhost:${PORT}/example`);
      console.log(`üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö MariaDB: http://localhost:${PORT}/test-db`);
      console.log('=======================================================');
      console.log('üîê ‡∏•‡∏≠‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö API:');
      console.log(`   Register: POST http://localhost:${PORT}/api/auth/register`);
      console.log(`   Login:    POST http://localhost:${PORT}/api/auth/login`);
      console.log(`   Users:    GET  http://localhost:${PORT}/api/users`);
      console.log('=======================================================');
      
      if (isConnected) {
        console.log('‚úÖ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô - MariaDB ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
      } else {
        console.log('‚ö†Ô∏è  Server ‡∏£‡∏±‡∏ô ‡πÅ‡∏ï‡πà MariaDB ‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°!');
      }
    });
    
  } catch (error) {
    console.error('üí• ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô server ‡πÑ‡∏î‡πâ:', error);
    process.exit(1);
  }
}

startServer();