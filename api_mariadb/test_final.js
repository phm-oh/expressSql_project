// test_final.js - ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç prepared statement ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö MariaDB
require('dotenv').config();
const mysql = require('mysql2');

async function testFinal() {
  console.log('üöÄ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö MariaDB + ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á users');
  console.log('=====================================');
  
  const connection = mysql.createConnection({
    host: process.env.DB_HOST || 'localhost',
    port: parseInt(process.env.DB_PORT) || 3306,
    user: process.env.DB_USER || 'root',
    password: process.env.DB_PASSWORD || '',
    database: 'skill68' // ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ï‡∏£‡∏á‡πÄ‡∏Ç‡πâ‡∏≤ skill68 ‡πÄ‡∏•‡∏¢
  }).promise();
  
  try {
    console.log('üîå ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ MariaDB database skill68...');
    
    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö connection
    const [timeResult] = await connection.execute('SELECT NOW() as time_now');
    console.log('‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
    console.log('‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:', timeResult[0].time_now);
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á users
    console.log('\nüîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á users...');
    
    try {
      const [tables] = await connection.execute("SHOW TABLES LIKE 'users'");
      
      if (tables.length === 0) {
        console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á users - ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á...');
        
        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á users
        const createTableSQL = `
          CREATE TABLE users (
            id INT AUTO_INCREMENT PRIMARY KEY,
            username VARCHAR(50) UNIQUE NOT NULL,
            email VARCHAR(100) UNIQUE NOT NULL,
            password VARCHAR(255) NOT NULL,
            full_name VARCHAR(100) NOT NULL,
            role VARCHAR(20) DEFAULT 'user',
            is_active BOOLEAN DEFAULT TRUE,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
          ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
        `;
        
        await connection.execute(createTableSQL);
        console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á users ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
        console.log('‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á...');
        
        const insertSQL = `
          INSERT INTO users (username, email, password, full_name, role) VALUES 
          ('admin', 'admin@test.com', '$2a$10$8K1p/a0dRTUXw/QCZ52yJeO5BZ/7VgU7LY2Cj9E3kN7qQ9z8W1X4S', '‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö', 'admin'),
          ('john', 'john@test.com', '$2a$10$8K1p/a0dRTUXw/QCZ52yJeO5BZ/7VgU7LY2Cj9E3kN7qQ9z8W1X4S', '‡∏à‡∏≠‡∏´‡πå‡∏ô ‡∏™‡∏°‡∏¥‡∏ò', 'user'),
          ('mary', 'mary@test.com', '$2a$10$8K1p/a0dRTUXw/QCZ52yJeO5BZ/7VgU7LY2Cj9E3kN7qQ9z8W1X4S', '‡πÅ‡∏°‡∏£‡∏µ‡πà ‡πÇ‡∏à‡∏ô‡∏™‡πå', 'user')
        `;
        
        await connection.execute(insertSQL);
        console.log('‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
        
        // ‡∏™‡∏£‡πâ‡∏≤‡∏á index
        await connection.execute('CREATE INDEX idx_users_username ON users(username)');
        await connection.execute('CREATE INDEX idx_users_email ON users(email)');
        await connection.execute('CREATE INDEX idx_users_role ON users(role)');
        console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á index ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
        
      } else {
        console.log('‚úÖ ‡∏û‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á users ‡πÅ‡∏•‡πâ‡∏ß');
      }
      
      // ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô users
      const [count] = await connection.execute('SELECT COUNT(*) as total FROM users');
      console.log(`üë• ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô users: ${count[0].total} ‡∏Ñ‡∏ô`);
      
      // ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠ users
      if (count[0].total > 0) {
        const [userList] = await connection.execute('SELECT username, email, role FROM users');
        console.log('üìã ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠ users:');
        userList.forEach(user => {
          console.log(`   - ${user.username} (${user.email}) - ${user.role}`);
        });
      }
      
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á
      console.log('\nüìä ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á users:');
      const [columns] = await connection.execute('DESCRIBE users');
      columns.forEach(col => {
        console.log(`   - ${col.Field}: ${col.Type} ${col.Null === 'NO' ? '(NOT NULL)' : ''} ${col.Key ? `(${col.Key})` : ''}`);
      });
      
    } catch (tableError) {
      console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Å‡∏±‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á:', tableError.message);
    }
    
    console.log('\nüéâ Setup ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô! MariaDB ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô');
    console.log('üöÄ ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏±‡∏ô server ‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß: npm start');
    
  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error.message);
  } finally {
    await connection.end();
    console.log('üëã ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÅ‡∏•‡πâ‡∏ß');
  }
}

testFinal();