const { pool } = require('../config/database');

class AnimalModel {
  // р╕Фр╕╢р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф
  static async getAllAnimals() {
    try {
      console.log('ЁЯУК р╕Бр╕│р╕ер╕▒р╕Зр╕Фр╕╢р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕кр╕▒р╕Хр╕зр╣Мр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф...');
      const [rows] = await pool.execute('SELECT * FROM animals ORDER BY created_at DESC');
      console.log(`тЬЕ р╕Фр╕╢р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕кр╕▒р╕Хр╕зр╣Мр╕кр╕│р╣Ар╕гр╣Зр╕И: ${rows.length} р╕гр╕▓р╕вр╕Бр╕▓р╕г`);
      return rows;
    } catch (error) {
      console.error('тЭМ р╕Фр╕╢р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕кр╕▒р╕Хр╕зр╣Мр╣Др╕бр╣Ир╕кр╕│р╣Ар╕гр╣Зр╕И:', error.message);
      throw new Error(`р╕Фр╕╢р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕кр╕▒р╕Хр╕зр╣Мр╣Др╕бр╣Ир╕кр╕│р╣Ар╕гр╣Зр╕И: ${error.message}`);
    }
  }

  // р╕Фр╕╢р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Хр╕▓р╕б ID
  static async getAnimalById(id) {
    try {
      console.log(`ЁЯФН р╕Бр╕│р╕ер╕▒р╕Зр╕Др╣Йр╕Щр╕лр╕▓р╕кр╕▒р╕Хр╕зр╣М ID: ${id}`);
      const [rows] = await pool.execute('SELECT * FROM animals WHERE id = ?', [id]);
      const animal = rows[0] || null;
      console.log(animal ? `тЬЕ р╕Юр╕Ър╕кр╕▒р╕Хр╕зр╣М: ${animal.name}` : `тЭМ р╣Др╕бр╣Ир╕Юр╕Ър╕кр╕▒р╕Хр╕зр╣М ID: ${id}`);
      return animal;
    } catch (error) {
      console.error(`тЭМ р╕Др╣Йр╕Щр╕лр╕▓р╕кр╕▒р╕Хр╕зр╣М ID ${id} р╣Др╕бр╣Ир╕кр╕│р╣Ар╕гр╣Зр╕И:`, error.message);
      throw new Error(`р╕Фр╕╢р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕кр╕▒р╕Хр╕зр╣М ID ${id} р╣Др╕бр╣Ир╕кр╕│р╣Ар╕гр╣Зр╕И: ${error.message}`);
    }
  }

  // р╣Ар╕Юр╕┤р╣Ир╕бр╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Гр╕лр╕бр╣И
  static async createAnimal(animalData) {
    const { name, species, age, habitat, weight, is_endangered } = animalData;
    
    try {
      console.log(`тЮХ р╕Бр╕│р╕ер╕▒р╕Зр╣Ар╕Юр╕┤р╣Ир╕бр╕кр╕▒р╕Хр╕зр╣Мр╣Гр╕лр╕бр╣И: ${name}`);
      const [result] = await pool.execute(
        `INSERT INTO animals (name, species, age, habitat, weight, is_endangered) 
         VALUES (?, ?, ?, ?, ?, ?)`,
        [name, species, age, habitat, weight || null, is_endangered || false]
      );
      
      // р╕Фр╕╢р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕кр╕▒р╕Хр╕зр╣Мр╕Чр╕╡р╣Ир╣Ар╕Юр╕┤р╣Ир╕Зр╕кр╕гр╣Йр╕▓р╕З
      const [newAnimal] = await pool.execute('SELECT * FROM animals WHERE id = ?', [result.insertId]);
      
      console.log(`тЬЕ р╣Ар╕Юр╕┤р╣Ир╕бр╕кр╕▒р╕Хр╕зр╣Мр╕кр╕│р╣Ар╕гр╣Зр╕И: ${newAnimal[0].name} (ID: ${newAnimal[0].id})`);
      return newAnimal[0];
    } catch (error) {
      console.error(`тЭМ р╣Ар╕Юр╕┤р╣Ир╕бр╕кр╕▒р╕Хр╕зр╣Мр╣Др╕бр╣Ир╕кр╕│р╣Ар╕гр╣Зр╕И:`, error.message);
      throw new Error(`р╣Ар╕Юр╕┤р╣Ир╕бр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕кр╕▒р╕Хр╕зр╣Мр╣Др╕бр╣Ир╕кр╕│р╣Ар╕гр╣Зр╕И: ${error.message}`);
    }
  }

  // р╣Бр╕Бр╣Йр╣Др╕Вр╕Вр╣Йр╕нр╕бр╕╣р╕е
  static async updateAnimal(id, animalData) {
    const { name, species, age, habitat, weight, is_endangered } = animalData;
    
    try {
      console.log(`ЁЯУЭ р╕Бр╕│р╕ер╕▒р╕Зр╣Бр╕Бр╣Йр╣Др╕Вр╕кр╕▒р╕Хр╕зр╣М ID: ${id}`);
      const [result] = await pool.execute(
        `UPDATE animals 
         SET name = ?, species = ?, age = ?, habitat = ?, weight = ?, is_endangered = ?
         WHERE id = ?`,
        [name, species, age, habitat, weight || null, is_endangered || false, id]
      );
      
      if (result.affectedRows === 0) {
        console.log(`тЭМ р╣Др╕бр╣Ир╕Юр╕Ър╕кр╕▒р╕Хр╕зр╣М ID: ${id}`);
        return null;
      }
      
      // р╕Фр╕╢р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕кр╕▒р╕Хр╕зр╣Мр╕Чр╕╡р╣Ир╣Бр╕Бр╣Йр╣Др╕Вр╣Бр╕ер╣Йр╕з
      const [updatedAnimal] = await pool.execute('SELECT * FROM animals WHERE id = ?', [id]);
      
      console.log(`тЬЕ р╣Бр╕Бр╣Йр╣Др╕Вр╕кр╕▒р╕Хр╕зр╣Мр╕кр╕│р╣Ар╕гр╣Зр╕И: ${updatedAnimal[0].name}`);
      return updatedAnimal[0];
    } catch (error) {
      console.error(`тЭМ р╣Бр╕Бр╣Йр╣Др╕Вр╕кр╕▒р╕Хр╕зр╣М ID ${id} р╣Др╕бр╣Ир╕кр╕│р╣Ар╕гр╣Зр╕И:`, error.message);
      throw new Error(`р╣Бр╕Бр╣Йр╣Др╕Вр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕кр╕▒р╕Хр╕зр╣Мр╣Др╕бр╣Ир╕кр╕│р╣Ар╕гр╣Зр╕И: ${error.message}`);
    }
  }

  // р╕ер╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕е
  static async deleteAnimal(id) {
    try {
      console.log(`ЁЯЧСя╕П р╕Бр╕│р╕ер╕▒р╕Зр╕ер╕Ър╕кр╕▒р╕Хр╕зр╣М ID: ${id}`);
      
      // р╕Фр╕╢р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕кр╕▒р╕Хр╕зр╣Мр╕Бр╣Ир╕нр╕Щр╕ер╕Ъ
      const [animalToDelete] = await pool.execute('SELECT * FROM animals WHERE id = ?', [id]);
      
      if (animalToDelete.length === 0) {
        console.log(`тЭМ р╣Др╕бр╣Ир╕Юр╕Ър╕кр╕▒р╕Хр╕зр╣М ID: ${id}`);
        return null;
      }
      
      // р╕ер╕Ър╕кр╕▒р╕Хр╕зр╣М
      const [result] = await pool.execute('DELETE FROM animals WHERE id = ?', [id]);
      
      if (result.affectedRows > 0) {
        console.log(`тЬЕ р╕ер╕Ър╕кр╕▒р╕Хр╕зр╣Мр╕кр╕│р╣Ар╕гр╣Зр╕И: ${animalToDelete[0].name}`);
        return animalToDelete[0];
      }
      
      return null;
    } catch (error) {
      console.error(`тЭМ р╕ер╕Ър╕кр╕▒р╕Хр╕зр╣М ID ${id} р╣Др╕бр╣Ир╕кр╕│р╣Ар╕гр╣Зр╕И:`, error.message);
      throw new Error(`р╕ер╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╕кр╕▒р╕Хр╕зр╣Мр╣Др╕бр╣Ир╕кр╕│р╣Ар╕гр╣Зр╕И: ${error.message}`);
    }
  }

  // р╕Др╣Йр╕Щр╕лр╕▓р╕Хр╕▓р╕бр╕кр╕▓р╕вр╕Юр╕▒р╕Щр╕Шр╕╕р╣М
  static async searchBySpecies(species) {
    try {
      console.log(`ЁЯФН р╕Бр╕│р╕ер╕▒р╕Зр╕Др╣Йр╕Щр╕лр╕▓р╕кр╕▒р╕Хр╕зр╣Мр╕кр╕▓р╕вр╕Юр╕▒р╕Щр╕Шр╕╕р╣М: ${species}`);
      const [rows] = await pool.execute(
        'SELECT * FROM animals WHERE species LIKE ? ORDER BY name',
        [`%${species}%`]
      );
      console.log(`тЬЕ р╕Др╣Йр╕Щр╕лр╕▓р╕кр╕│р╣Ар╕гр╣Зр╕И: р╕Юр╕Ъ ${rows.length} р╕гр╕▓р╕вр╕Бр╕▓р╕г`);
      return rows;
    } catch (error) {
      console.error(`тЭМ р╕Др╣Йр╕Щр╕лр╕▓р╕кр╕▒р╕Хр╕зр╣Мр╕кр╕▓р╕вр╕Юр╕▒р╕Щр╕Шр╕╕р╣М "${species}" р╣Др╕бр╣Ир╕кр╕│р╣Ар╕гр╣Зр╕И:`, error.message);
      throw new Error(`р╕Др╣Йр╕Щр╕лр╕▓р╕кр╕▒р╕Хр╕зр╣Мр╣Др╕бр╣Ир╕кр╕│р╣Ар╕гр╣Зр╕И: ${error.message}`);
    }
  }
}

module.exports = AnimalModel;