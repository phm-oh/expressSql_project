const { pool } = require('../config/database');

class AnimalModel {
  // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  static async getAllAnimals() {
    const client = await pool.connect();
    try {
      console.log('üìä ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î...');
      const result = await client.query('SELECT * FROM animals ORDER BY created_at DESC');
      console.log(`‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${result.rows.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
      return result.rows;
    } catch (error) {
      console.error('‚ùå ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', error.message);
      throw new Error(`‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${error.message}`);
    } finally {
      client.release();
    }
  }

  // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏° ID
  static async getAnimalById(id) {
    const client = await pool.connect();
    try {
      console.log(`üîç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏±‡∏ï‡∏ß‡πå ID: ${id}`);
      const result = await client.query('SELECT * FROM animals WHERE id = $1', [id]);
      const animal = result.rows[0] || null;
      console.log(animal ? `‚úÖ ‡∏û‡∏ö‡∏™‡∏±‡∏ï‡∏ß‡πå: ${animal.name}` : `‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏±‡∏ï‡∏ß‡πå ID: ${id}`);
      return animal;
    } catch (error) {
      console.error(`‚ùå ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏±‡∏ï‡∏ß‡πå ID ${id} ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:`, error.message);
      throw new Error(`‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏±‡∏ï‡∏ß‡πå ID ${id} ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${error.message}`);
    } finally {
      client.release();
    }
  }

  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
  static async createAnimal(animalData) {
    const { name, species, age, habitat, weight, is_endangered } = animalData;
    const client = await pool.connect();
    
    try {
      console.log(`‚ûï ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÉ‡∏´‡∏°‡πà: ${name}`);
      const result = await client.query(
        `INSERT INTO animals (name, species, age, habitat, weight, is_endangered) 
         VALUES ($1, $2, $3, $4, $5, $6) 
         RETURNING *`,
        [name, species, age, habitat, weight || null, is_endangered || false]
      );
      console.log(`‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${result.rows[0].name} (ID: ${result.rows[0].id})`);
      return result.rows[0];
    } catch (error) {
      console.error(`‚ùå ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:`, error.message);
      throw new Error(`‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${error.message}`);
    } finally {
      client.release();
    }
  }

  // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
  static async updateAnimal(id, animalData) {
    const { name, species, age, habitat, weight, is_endangered } = animalData;
    const client = await pool.connect();
    
    try {
      console.log(`üìù ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏±‡∏ï‡∏ß‡πå ID: ${id}`);
      const result = await client.query(
        `UPDATE animals 
         SET name = $1, species = $2, age = $3, habitat = $4, 
             weight = $5, is_endangered = $6, updated_at = CURRENT_TIMESTAMP
         WHERE id = $7 
         RETURNING *`,
        [name, species, age, habitat, weight || null, is_endangered || false, id]
      );
      const animal = result.rows[0] || null;
      console.log(animal ? `‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${animal.name}` : `‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏±‡∏ï‡∏ß‡πå ID: ${id} ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç`);
      return animal;
    } catch (error) {
      console.error(`‚ùå ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏±‡∏ï‡∏ß‡πå ID ${id} ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:`, error.message);
      throw new Error(`‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${error.message}`);
    } finally {
      client.release();
    }
  }

  // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
  static async deleteAnimal(id) {
    const client = await pool.connect();
    try {
      console.log(`üóëÔ∏è ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡∏ö‡∏™‡∏±‡∏ï‡∏ß‡πå ID: ${id}`);
      const result = await client.query('DELETE FROM animals WHERE id = $1 RETURNING *', [id]);
      const animal = result.rows[0] || null;
      console.log(animal ? `‚úÖ ‡∏•‡∏ö‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${animal.name}` : `‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏±‡∏ï‡∏ß‡πå ID: ${id} ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏ö`);
      return animal;
    } catch (error) {
      console.error(`‚ùå ‡∏•‡∏ö‡∏™‡∏±‡∏ï‡∏ß‡πå ID ${id} ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:`, error.message);
      throw new Error(`‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${error.message}`);
    } finally {
      client.release();
    }
  }

  // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ï‡∏≤‡∏°‡∏™‡∏≤‡∏¢‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå
  static async searchBySpecies(species) {
    const client = await pool.connect();
    try {
      console.log(`üîç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏™‡∏≤‡∏¢‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå: ${species}`);
      const result = await client.query(
        'SELECT * FROM animals WHERE species ILIKE $1 ORDER BY name',
        [`%${species}%`]
      );
      console.log(`‚úÖ ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ‡∏û‡∏ö ${result.rows.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
      return result.rows;
    } catch (error) {
      console.error(`‚ùå ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏™‡∏≤‡∏¢‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå "${species}" ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:`, error.message);
      throw new Error(`‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${error.message}`);
    } finally {
      client.release();
    }
  }
}

module.exports = AnimalModel;